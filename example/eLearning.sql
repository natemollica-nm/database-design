/*
Create tables eLearning Database

Notes: 
  PW Reset for MySQL Server : $(brew --prefix mysql)/bin/mysqladmin -u root password NEWPASS
  Start MySQL Server: > mysqld [ENTER] 
  Connecto MySQL Server: > mysql -u root -p
  PW: `password`
  Selecting DB to Use: USE <DB_NAME>
  Check SELECTED DB: SELECT DATABASE()
  Delete TABLE: DROP TABLE <table_name>;
  Adding Column to TABLE: 
    ALTER TABLE <table_name>
    ADD [COLUMN] pub_id INT AFTER auth_id,
    ADD CONSTRAINT fk_publisher FOREIGN KEY (pub_id) REFERENCES publisher(pub_id)
*/


-- CREATE AND SELECT eLEARNING DATABASE --
CREATE DATABASE IF NOT EXISTS `eLearning`;
USE eLearning;

-- BEGIN: eLEARNING DB TABLE CREATION (19 TABLES) --
CREATE TABLE IF NOT EXISTS `AUTHOR` (
  `AUTH_ID` INT NOT NULL PRIMARY KEY,
  `AUTH_FN` VARCHAR(300),
  `AUTH_LN` VARCHAR(300),
  `AUTH_FULLN` VARCHAR(300)
);

CREATE TABLE IF NOT EXISTS `PUBLISHER` (
  `PUB_ID` INT NOT NULL PRIMARY KEY,
  `PUB_NAME` VARCHAR(300),
  `PUB_ADDR` VARCHAR(300),
  `PUB_URL` TEXT(800)
);

CREATE TABLE IF NOT EXISTS `BOOK` (
  `BK_ISBN` INT NOT NULL PRIMARY KEY,
  `BK_INVID` INT NOT NULL UNIQUE KEY,
  `BK_REQID` INT NOT NULL UNIQUE KEY,
  `AUTH_ID` INT,
  `PUB_ID` INT,
  `BK_RENTCOST` DECIMAL,
  `BK_BUYCOST` DECIMAL,
  `BK_TITLE` VARCHAR(300),
  `BK_EDITION` INT,
  `BK_URL` TEXT(800),
  `BK_CATEGORY` VARCHAR(300)
);

CREATE TABLE IF NOT EXISTS `LIBRARY` (
  `LIB_ID` INT NOT NULL PRIMARY KEY,
  `LIB_QRESULTS` BIT NULL UNIQUE KEY,
  `INV_ID` INT,
  `LIB_URL` TEXT(800)
);

CREATE TABLE IF NOT EXISTS `LIB_INVENTORY` (
  `INV_ID` INT NOT NULL PRIMARY KEY,
  `BK_INVID` INT,
  `E_INVID` INT,
  `INV_LASTUPDATE` DATETIME
);

CREATE TABLE IF NOT EXISTS `REQ_AUTHORIZATION` (
  `RAUTH_ID` INT NOT NULL PRIMARY KEY,
  `RAUTH_COST_CALC` DECIMAL NOT NULL UNIQUE KEY,
  `SYS_REQRESPONSE` BIT,
  `LIB_QRESULTS` BIT,
  `BK_REQID` INT,
  `E_REQID` INT
);

CREATE TABLE IF NOT EXISTS `REQ_AUTH_ACCESS` (
  `AUTH_ID` INT NOT NULL PRIMARY KEY,
  `AUTH_STUDCODE` VARCHAR(100) NOT NULL UNIQUE KEY,
  `AUTH_STAFFCODE` VARCHAR(100) NOT NULL UNIQUE KEY,
  `E_CONTENT` VARCHAR(300),
  `BK_ISBN` INT,
  `BILL_AUTHCODE` VARCHAR(300),
  `AUTH_DATE` DATETIME,
  `AUTH_START` DATETIME,
  `AUTH_END` DATETIME,
  `AUTH_STATUS` BIT
);

CREATE TABLE IF NOT EXISTS `E_COURSE` (
  `E_CID` INT NOT NULL PRIMARY KEY,
  `E_REQID` INT NOT NULL UNIQUE KEY,
  `E_INVID` INT NOT NULL UNIQUE KEY,
  `E_CONTENT` VARCHAR(300) NOT NULL UNIQUE KEY,
  `ECOURSE_NAME` VARCHAR(300),
  `ECOURSE_START` DATETIME,
  `ECOURSE_END` DATETIME,
  `E_NUMOF_STUD` INT
);

CREATE TABLE IF NOT EXISTS `eLEARNING` (
  `SYS_ID` INT NOT NULL PRIMARY KEY,
  `SYS_BILLING` VARCHAR(300) NOT NULL UNIQUE KEY,
  `SYS_REQRESPONSE` BIT NULL UNIQUE KEY,
  `MEM_SYSID` INT,
  `REQ_INFO` VARCHAR(300),
  `LIB_ID` INT,
  `SYS_URL` TEXT(800)
);

CREATE TABLE IF NOT EXISTS `E_MEMBERSHIP` (
  `MEM_SYSID` INT NOT NULL PRIMARY KEY,
  `MEM_STUDID` INT NULL UNIQUE KEY,
  `MEM_STAFFID` INT NULL UNIQUE KEY,
  `MEM_UNIID` INT NULL UNIQUE KEY,
  `SYS_ID` INT,
  `MEM_ACTIVE` BIT,
  `MEM_START` DATETIME,
  `MEM_EXPIRATION` DATETIME,
  `MEM_TERMS` TEXT(800)
);

CREATE TABLE IF NOT EXISTS `UNIVERSITY` (
  `UNI_ID` INT NOT NULL PRIMARY KEY,
  `UNI_STUDID` INT NOT NULL UNIQUE KEY,
  `UNI_STAFFID` INT NOT NULL UNIQUE KEY,
  `UNI_PAYINFO` VARCHAR(300) NOT NULL UNIQUE KEY,
  `UNI_BILLINFO` VARCHAR(300) NOT NULL UNIQUE KEY,
  `MEM_UNIID` INT,
  `PAY_INFO` VARCHAR(300),
  `UNI_URL` TEXT(800),
  `UNI_NAME` VARCHAR(300),
  `UNI_ADDR` VARCHAR(300),
  `UNI_PHONE` VARCHAR(300),
  `UNI_EMAIL` VARCHAR(300)
);

CREATE TABLE IF NOT EXISTS `INSTRUCTOR` (
  `INST_ID` INT NOT NULL PRIMARY KEY,
  `UNI_STAFFID` INT,
  `MEM_STAFFID` INT,
  `AUTH_STAFFCODE` VARCHAR(100),
  `INST_FNAME` VARCHAR(300),
  `INST_LNAME` VARCHAR(300),
  `INST_PHONE` VARCHAR(300),
  `INST_EMAIL` VARCHAR(300)
);

CREATE TABLE IF NOT EXISTS `STUDENT` (
  `STUD_ID` INT NOT NULL PRIMARY KEY,
  `UNI_STUDID` INT,
  `MEM_STUDID` INT,
  `AUTH_STUDCODE` VARCHAR(100),
  `RENT_ID` INT,
  `PURCH_ID` INT,
  `REQ_AUTHSTATUS` BIT,
  `STUD_FNAME` VARCHAR(300),
  `STUD_LNAME` VARCHAR(300),
  `STUD_PHONE` VARCHAR(300),
  `STUD_EMAIL` VARCHAR(300)
);

CREATE TABLE IF NOT EXISTS `STUD_PAYINFO` (
  `PAY_INFO` VARCHAR(300) NOT NULL PRIMARY KEY,
  `STUD_ID` INT
);

CREATE TABLE IF NOT EXISTS `REQUEST` (
  `REQ_ID` INT NOT NULL PRIMARY KEY,
  `REQ_INFO` VARCHAR(300) NOT NULL UNIQUE KEY,
  `REQ_AUTHSTATUS` BIT NOT NULL UNIQUE KEY,
  `RAUTH_ID` INT,
  `RENT_REQID` INT,
  `PURCH_REQID` INT,
  `REQ_DATE` DATETIME,
  `REQ_PURCHASE` BIT,
  `REQ_RENT` BIT
);

CREATE TABLE IF NOT EXISTS `RENTAL_REQUEST` (
  `RENT_ID` INT NOT NULL PRIMARY KEY,
  `RENT_REQID` INT NULL UNIQUE KEY,
  `RENT_BILLING` DECIMAL NOT NULL UNIQUE KEY,
  `RENT_REQINFO` VARCHAR(300) NOT NULL UNIQUE KEY,
  `RENT_START` DATETIME,
  `RENT_END` DATETIME
);

CREATE TABLE IF NOT EXISTS `PURCHASE_REQUEST` (
  `PURCH_ID` INT NOT NULL PRIMARY KEY,
  `PURCH_REQID` INT NULL UNIQUE KEY,
  `PURCH_BILLING` DECIMAL NOT NULL UNIQUE KEY,
  `PURCH_REQINFO` VARCHAR(300) NOT NULL UNIQUE KEY,
  `PURCH_DATE` DATETIME
);

CREATE TABLE IF NOT EXISTS `BILL` (
  `BILL_ID` INT NOT NULL PRIMARY KEY,
  `BILL_AUTHCODE` VARCHAR(100) NULL UNIQUE KEY,
  `SYS_BILLING` VARCHAR(300),
  `UNI_BILLINFO` VARCHAR(300),
  `TRANS_ID` INT,
  `BILL_DATE` DATETIME,
  `BILL_TOTAL` DECIMAL
);

CREATE TABLE IF NOT EXISTS `PAY_TRANSACTION` (
  `TRANS_ID` INT NOT NULL PRIMARY KEY,
  `PAY_ID` INT,
  `TRANS_STATUS` BIT
);

CREATE TABLE IF NOT EXISTS `PAYMENT` (
  `PAY_ID` INT NOT NULL PRIMARY KEY,
  `PAY_AMOUNT` DECIMAL NOT NULL UNIQUE KEY,
  `UNI_PAYINFO` VARCHAR(300),
  `TRANS_ID` INT,
  `PAY_DATE` DATETIME
);

-- END: eLEARNING DB TABLE CREATION (19 TABLES) --

-- START: eLEARNING DB TABLE POPULATION --
-- AUTHOR --
INSERT INTO `AUTHOR` (`AUTH_ID`, `AUTH_FN`, `AUTH_LN`, `AUTH_FULLN`) VALUES
('2123', 'Paul J.', 'Deitel', 'Paul J. Deitel'),
('6544', 'Yashavant', 'Kanetkar', 'Yashavant Kanetkar'),
('6198', 'Charles', 'Bukowski', 'Charles Bukowski'),
('9879', 'Herbert', 'Schildt', 'Herbert Schildt');

-- PUBLISHER --
INSERT INTO `PUBLISHER` (`PUB_ID`, `PUB_NAME`, `PUB_ADDR`, `PUB_URL`) VALUES
('00001','Prentice Hall','15 E Midland Ave Ste 502 Paramus, NJ 07652','https://www.pearson.com'),
('00002','Tata Mcgraw','3310, 1st Floor 8th Cross, H.A.L. II Stage, Indiranagar, Bangalore 560038','https://www.mheducation.com'),
('00003','BPB Publications','20 Ansari Rd Darya Ganj, New Delhi, NCT, India 110002','https://bpbonline.com'),
('00004','Black Sparrow Press','Post Office Box 450, Jaffrey, NH 03452','https://godine.com');

-- BOOK --
INSERT INTO `BOOK` (`BK_ISBN`,`BK_INVID`,`BK_REQID`,`AUTH_ID`, `PUB_ID`, `BK_RENTCOST`,`BK_BUYCOST`, `BK_TITLE`, `BK_EDITION`, `BK_URL`,`BK_CATEGORY`) VALUES
('101','1011','2000001','2123','00001','38.59','122.54','Programming in Java - 101','12', 'https://elearning/prog-in-java-12', 'Computer Science'),
('223','1022','2000002','6544','00002','44.58','150.30','Understand Transact-SQL','22', 'https://elearning/under-trans-sql-22','Computer Science'),
('1201','1033','2000003','6198','00003','35.69','112.45','Where the Wild Things Are', NULL, 'https://elearning/fiction/wtwta','Childrens'),
('0231','1044','2000004','9879','00004','65.99','250.69','Ham on Rye', NULL, 'https://elearning/fiction/ham-rye-bukowski','Classics');

-- eLEARNING --
INSERT INTO `eLEARNING` (`SYS_ID`,`SYS_BILLING`,`SYS_REQRESPONSE`,`SYS_URL`) VALUES
('72345','eLEARNING BILL INFO', NULL,'https://elearning');

-- LIBRARY --
INSERT INTO `LIBRARY` (`LIB_ID`,`LIB_QRESULTS`,`LIB_URL`) VALUES
('666999', NULL, 'https://elearning/library');

-- LIB_INVENTORY --
INSERT INTO `LIB_INVENTORY` (`INV_ID`,`INV_LASTUPDATE`) VALUES
('666999','2022-03-24 00:00:23');

-- E_COURSE --
INSERT INTO `E_COURSE` (`E_CID`,`E_REQID`,`E_INVID`, `E_CONTENT`, `ECOURSE_NAME`, `ECOURSE_START`,`ECOURSE_END`, `E_NUMOF_STUD`) VALUES
('262','2000001','2011','<JAVA_CONTENT>','Programming in Java','2022-04-11 00:00:00','2022-04-29 12:00:00','16'),
('440','2000002','2022','<DATABASE_CONTENT>','Database Modeling & Design','2022-04-04 00:00:00','2022-04-29 12:00:00','22'),
('261','2000003','2033','<C++_CONTENT>','Programming in C++','2022-04-11 00:00:00','2022-04-29 12:00:00','31'),
('220','2000004','2044','<PROPS_STATS_CONTENT>','Applied Probability & Statistics','2022-04-11 00:00:00','2022-04-29 12:00:00','29');

-- E_MEMBERSHIP --
INSERT INTO `E_MEMBERSHIP` (`MEM_SYSID`,`MEM_STUDID`, `MEM_STAFFID`, `MEM_UNIID`, `MEM_ACTIVE`,`MEM_START`,`MEM_EXPIRATION`,`MEM_TERMS`) VALUES
('1','11','1011','6711',1,'2019-02-24 00:00:23','2025-02-24 00:00:23', NULL),
('2','22','1022','6722',1,'2019-02-24 00:00:23','2024-07-24 00:00:23', NULL),
('3','33','1033','6733',1,'2019-02-24 00:00:23','2025-04-24 00:00:23', NULL),
('4','44','1044','6744',0,'2019-02-24 00:00:23','2026-04-24 00:00:23', NULL);

-- BEGIN: eLEARNING DB TABLE KEY CREATION --
ALTER TABLE `BOOK`
  ADD FOREIGN KEY (`AUTH_ID`) REFERENCES `AUTHOR`(`AUTH_ID`),
  ADD FOREIGN KEY (`PUB_ID`) REFERENCES `PUBLISHER`(`PUB_ID`);
  
ALTER TABLE `LIB_INVENTORY`
  ADD FOREIGN KEY (`BK_INVID`) REFERENCES `BOOK`(`BK_INVID`),
  ADD FOREIGN KEY (`E_INVID`) REFERENCES `E_COURSE`(`E_INVID`);

ALTER TABLE `LIBRARY`
  ADD FOREIGN KEY (`INV_ID`) REFERENCES `LIB_INVENTORY`(`INV_ID`);

ALTER TABLE `REQ_AUTHORIZATION`
  ADD FOREIGN KEY (`SYS_REQRESPONSE`) REFERENCES `eLEARNING`(`SYS_REQRESPONSE`),
  ADD FOREIGN KEY (`LIB_QRESULTS`) REFERENCES `LIBRARY`(`LIB_QRESULTS`),
  ADD FOREIGN KEY (`BK_REQID`) REFERENCES `BOOK`(`BK_REQID`),
  ADD FOREIGN KEY (`E_REQID`) REFERENCES `E_COURSE`(`E_REQID`);

ALTER TABLE `eLEARNING`
  ADD FOREIGN KEY (`MEM_SYSID`) REFERENCES `E_MEMBERSHIP`(`MEM_SYSID`),
  ADD FOREIGN KEY (`REQ_INFO`) REFERENCES `REQUEST`(`REQ_INFO`),
  ADD FOREIGN KEY (`LIB_ID`) REFERENCES `LIBRARY`(`LIB_ID`);

ALTER TABLE `STUDENT`
  ADD FOREIGN KEY (`UNI_STUDID`) REFERENCES `UNIVERSITY`(`UNI_STUDID`),
  ADD FOREIGN KEY (`MEM_STUDID`) REFERENCES `E_MEMBERSHIP`(`MEM_STUDID`),
  ADD FOREIGN KEY (`AUTH_STUDCODE`) REFERENCES `REQ_AUTH_ACCESS`(`AUTH_STUDCODE`),
  ADD FOREIGN KEY (`RENT_ID`) REFERENCES `RENTAL_REQUEST`(`RENT_ID`),
  ADD FOREIGN KEY (`PURCH_ID`) REFERENCES `PURCHASE_REQUEST`(`PURCH_ID`),
  ADD FOREIGN KEY (`REQ_AUTHSTATUS`) REFERENCES `REQUEST`(`REQ_AUTHSTATUS`);

ALTER TABLE `STUD_PAYINFO`
  ADD FOREIGN KEY (`STUD_ID`) REFERENCES `STUDENT`(`STUD_ID`);

ALTER TABLE `UNIVERSITY`
  ADD FOREIGN KEY (`MEM_UNIID`) REFERENCES `E_MEMBERSHIP`(`MEM_UNIID`),
  ADD FOREIGN KEY (`PAY_INFO`) REFERENCES `STUD_PAYINFO`(`PAY_INFO`);

ALTER TABLE `INSTRUCTOR`
  ADD FOREIGN KEY (`UNI_STAFFID`) REFERENCES `UNIVERSITY`(`UNI_STAFFID`),
  ADD FOREIGN KEY (`MEM_STAFFID`) REFERENCES `E_MEMBERSHIP`(`MEM_STAFFID`),
  ADD FOREIGN KEY (`AUTH_STAFFCODE`) REFERENCES `REQ_AUTH_ACCESS`(`AUTH_STAFFCODE`);

ALTER TABLE `REQUEST`
  ADD FOREIGN KEY (`RENT_REQID`) REFERENCES `RENTAL_REQUEST`(`RENT_REQID`),
  ADD FOREIGN KEY (`PURCH_REQID`) REFERENCES `PURCHASE_REQUEST`(`PURCH_REQID`),
  ADD FOREIGN KEY (`RAUTH_ID`) REFERENCES `REQ_AUTHORIZATION`(`RAUTH_ID`);

ALTER TABLE `PAY_TRANSACTION`
  ADD FOREIGN KEY (`PAY_ID`) REFERENCES `PAYMENT`(`PAY_ID`);

ALTER TABLE `PAYMENT`
  ADD FOREIGN KEY (`UNI_PAYINFO`) REFERENCES `UNIVERSITY`(`UNI_PAYINFO`);

ALTER TABLE `REQ_AUTH_ACCESS`
  ADD FOREIGN KEY (`E_CONTENT`) REFERENCES `E_COURSE`(`E_CONTENT`),
  ADD FOREIGN KEY (`BK_ISBN`) REFERENCES `BOOK`(`BK_ISBN`),
  ADD FOREIGN KEY (`BILL_AUTHCODE`) REFERENCES `BILL`(`BILL_AUTHCODE`);

ALTER TABLE `BILL`
  ADD FOREIGN KEY (`SYS_BILLING`) REFERENCES `eLEARNING`(`SYS_BILLING`),
  ADD FOREIGN KEY (`TRANS_ID`) REFERENCES `PAY_TRANSACTION`(`TRANS_ID`),
  ADD FOREIGN KEY (`UNI_BILLINFO`) REFERENCES `UNIVERSITY`(`UNI_BILLINFO`);

COMMIT;
-- END: eLEARNING DB TABLE KEY CONSTRAINT CREATION --